pipeline {
    agent any

    tools {
        maven 'maven'
        jdk 'JDK17'
    }

    parameters {
        booleanParam(name: 'RUN_API_TESTS', defaultValue: true, description: 'Run API Tests')
        booleanParam(name: 'RUN_WEB_TESTS', defaultValue: true, description: 'Run Web Tests')
        booleanParam(name: 'RUN_MOBILE_TESTS', defaultValue: false, description: 'Run Mobile Tests')
    }

    stages {
        stage('Environment Check') {
            steps {
                sh 'java -version'
                sh 'mvn -version'
            }
        }

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Project') {
            steps {
                sh 'mvn clean install -DskipTests'
            }
        }

        stage('API Tests') {
            when { expression { params.RUN_API_TESTS } }
            steps {
                dir('api-tests') {
                    sh '''
                        echo "Running API Tests..."
                        mvn clean test
                    '''
                }
            }
            post {
                always {
                    dir('api-tests') {
                        // Archive the test artifacts
                        archiveArtifacts(
                            artifacts: 'target/cucumber-reports/**/*,target/surefire-reports/**/*',
                            allowEmptyArchive: true,
                            fingerprint: true
                        )

                        // Publish JUnit results
                        junit(
                            allowEmptyResults: true,
                            testResults: 'target/surefire-reports/*.xml'
                        )

                        // Publish Cucumber reports
                        cucumber(
                            buildStatus: 'UNSTABLE',
                            reportTitle: 'API Test Report',
                            fileIncludePattern: '**/cucumber.json',
                            jsonReportDirectory: 'target/cucumber-reports',
                            sortingMethod: 'ALPHABETICAL'
                        )
                    }
                }
            }
        }

        stage('Web Tests') {
            when { expression { params.RUN_WEB_TESTS } }
            steps {
                dir('web-tests') {
                    sh '''
                        echo "Running Web Tests..."
                        mvn clean test
                    '''
                }
            }
            post {
                always {
                    dir('web-tests') {
                        archiveArtifacts(
                            artifacts: 'target/cucumber-reports/**/*,target/surefire-reports/**/*',
                            allowEmptyArchive: true,
                            fingerprint: true
                        )
                        junit(
                            allowEmptyResults: true,
                            testResults: 'target/surefire-reports/*.xml'
                        )
                    }
                }
            }
        }

        stage('Mobile Tests') {
            when { expression { params.RUN_MOBILE_TESTS } }
            steps {
                dir('mobile-tests') {
                    sh '''
                        echo "Running Mobile Tests..."
                        mvn clean test
                    '''
                }
            }
            post {
                always {
                    dir('mobile-tests') {
                        archiveArtifacts(
                            artifacts: 'target/cucumber-reports/**/*,target/surefire-reports/**/*',
                            allowEmptyArchive: true,
                            fingerprint: true
                        )
                        junit(
                            allowEmptyResults: true,
                            testResults: 'target/surefire-reports/*.xml'
                        )
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Test execution completed'
        }
        success {
            echo 'All tests completed successfully!'
        }
        failure {
            echo 'Test execution failed. Please check the logs for details.'
        }
        cleanup {
            cleanWs()
        }
    }
}
